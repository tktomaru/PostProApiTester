(function(){if(window.apiTesterContentScript)return;window.apiTesterContentScript=!0,console.log("API Tester content script loaded on:",window.location.href);const f={interceptFetch:!0,interceptXHR:!0,logRequests:!0,autoCapture:!1},m=window.fetch,w=XMLHttpRequest.prototype.open,g=XMLHttpRequest.prototype.send;let c=0,i=new Map;function h(){y(),T(),P(),b()}function y(){const e=document.createElement("script");e.src=chrome.runtime.getURL("injected.js"),e.onload=function(){this.remove()},(document.head||document.documentElement).appendChild(e)}function T(){window.addEventListener("message",function(e){e.source===window&&(e.data.type==="API_TESTER_REQUEST"?a(e.data.payload):e.data.type==="API_TESTER_RESPONSE"&&u(e.data.payload))},!1),chrome.runtime.onMessage.addListener((e,t,n)=>{switch(e.action){case"getPageRequests":n({requests:Array.from(i.values()),url:window.location.href});break;case"clearPageRequests":i.clear(),n({success:!0});break;case"injectTestRequest":v(e.request),n({success:!0});break;case"enableAutoCapture":f.autoCapture=e.enabled,S(),n({success:!0});break;default:n({error:"Unknown action"})}return!0})}function a(e){const t={id:++c,timestamp:Date.now(),url:e.url,method:e.method,headers:e.headers,body:e.body,initiator:e.initiator||"unknown",status:"pending"};i.set(t.id,t),chrome.runtime.sendMessage({action:"pageRequestDetected",request:t,pageUrl:window.location.href}),console.log("API Tester: Request detected",t)}function u(e){const t=i.get(e.requestId);t&&(t.status=e.status,t.statusText=e.statusText,t.responseHeaders=e.headers,t.responseBody=e.body,t.duration=Date.now()-t.timestamp,t.size=e.size,i.set(t.id,t),chrome.runtime.sendMessage({action:"pageResponseDetected",request:t,pageUrl:window.location.href}),console.log("API Tester: Response detected",t))}function b(){window.fetch=function(...e){const t=Date.now(),n=q(e);return m.apply(this,e).then(r=>{const s={...n,status:r.status,statusText:r.statusText,headers:E(r.headers),duration:Date.now()-t};return x(s,r.clone()),r}).catch(r=>{const s={...n,error:r.message,duration:Date.now()-t};throw A(s),r})},XMLHttpRequest.prototype.open=function(e,t,n,o,r){return this._apiTesterInfo={method:e,url:t,startTime:Date.now()},w.call(this,e,t,n,o,r)},XMLHttpRequest.prototype.send=function(e){return this._apiTesterInfo&&(this._apiTesterInfo.body=e,this.addEventListener("loadend",function(){const t={...this._apiTesterInfo,status:this.status,statusText:this.statusText,responseHeaders:I(this.getAllResponseHeaders()),responseBody:this.responseText,duration:Date.now()-this._apiTesterInfo.startTime};C(t)})),g.call(this,e)}}function q(e){const[t,n={}]=e,o=typeof t=="string"?t:t.url,r=n.method||"GET",s=R(n.headers),p=n.body;return{url:o,method:r.toUpperCase(),headers:s,body:p,initiator:"fetch"}}function R(e){if(!e)return{};if(e instanceof Headers){const t={};for(const[n,o]of e.entries())t[n]=o;return t}if(Array.isArray(e)){const t={};for(const[n,o]of e)t[n]=o;return t}return e||{}}function E(e){const t={};if(e instanceof Headers)for(const[n,o]of e.entries())t[n]=o;return t}function I(e){const t={};return e&&e.split(`\r
`).forEach(n=>{const o=n.split(": ");o.length===2&&(t[o[0]]=o[1])}),t}function x(e,t){t.text().then(n=>{const o={...e,responseBody:n,size:new Blob([n]).size};u({requestId:c,...o})}).catch(n=>{console.warn("Failed to read response body:",n),u({requestId:c,...e})}),a(e)}function A(e){a({...e,error:e.error})}function C(e){a(e),u({requestId:c,...e})}function P(){new MutationObserver(function(t){t.forEach(function(n){n.type==="childList"&&n.addedNodes.forEach(function(o){o.nodeType===Node.ELEMENT_NODE&&d(o)})})}).observe(document.body,{childList:!0,subtree:!0}),d(document.body)}function d(e){if(!e.querySelectorAll)return;const t=e.querySelectorAll('a[href*="api"], a[href*="/v1/"], a[href*="/v2/"], a[href*=".json"]'),n=[];t.forEach(r=>{const s=r.href;s&&(s.includes("api")||s.includes("/v")||s.endsWith(".json"))&&n.push({url:s,text:r.textContent.trim(),context:"link"})}),e.querySelectorAll("script").forEach(r=>{r.textContent&&L(r.textContent).forEach(p=>{n.push({url:p,context:"script",text:"Found in script"})})}),n.length>0&&chrome.runtime.sendMessage({action:"endpointsDetected",endpoints:n,pageUrl:window.location.href})}function L(e){const t=[/https?:\/\/[^\s"']+\/api\/[^\s"']*/g,/https?:\/\/api\.[^\s"']+/g,/\/api\/[^\s"']*/g,/\/v\d+\/[^\s"']*/g],n=[];return t.forEach(o=>{const r=e.match(o);r&&n.push(...r)}),[...new Set(n)]}function v(e){const t=document.createElement("script");t.textContent=`
          (function() {
              const request = ${JSON.stringify(e)};
              
              fetch(request.url, {
                  method: request.method,
                  headers: request.headers,
                  body: request.body
              }).then(response => {
                  console.log('API Tester: Test request completed', response);
                  return response.text();
              }).then(text => {
                  console.log('API Tester: Response body', text);
              }).catch(error => {
                  console.error('API Tester: Test request failed', error);
              });
          })();
      `,document.head.appendChild(t),t.remove()}function S(){window.postMessage({type:"API_TESTER_CONFIG",payload:f},"*")}function k(){const e=["graphql","apollo","relay","__schema","query","mutation","subscription"],t=document.documentElement.textContent.toLowerCase(),n=Array.from(document.querySelectorAll("script")).map(o=>o.src).join(" ");return e.some(o=>t.includes(o)||n.includes(o))}let l=window.location.href;function M(){new MutationObserver(function(){window.location.href!==l&&(l=window.location.href,chrome.runtime.sendMessage({action:"routeChanged",newUrl:l,timestamp:Date.now()}),setTimeout(()=>{d(document.body)},1e3))}).observe(document,{subtree:!0,childList:!0})}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",h):h(),M();function H(){const e={framework:U(),hasGraphQL:k(),hasRestAPI:_(),hasWebSocket:F()};chrome.runtime.sendMessage({action:"pageTechnologyDetected",technologies:e,pageUrl:window.location.href})}function U(){return window.React?"React":window.Vue?"Vue":window.angular?"Angular":window.jQuery?"jQuery":"Unknown"}function _(){const e=document.documentElement.textContent.toLowerCase();return e.includes("rest")||e.includes("api")}function F(){return"WebSocket"in window&&document.documentElement.textContent.toLowerCase().includes("websocket")}setTimeout(H,2e3),console.log("API Tester content script initialized")})();
