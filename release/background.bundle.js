const g=new Map;(function(){let p=!1,b={urls:[],types:[],methods:["GET","POST","PUT","DELETE"]};chrome.runtime.onMessage.addListener((e,t,o)=>{switch(e.action){case"startInterceptor":E(e.filters),o({success:!0});break;case"stopInterceptor":_(),o({success:!0});break;case"getInterceptorStatus":o({active:p});break;case"sendHttpRequest":return A(e.options,o),!0;case"sendRequestWithHeaderInjection":return U(e.options,o),!0;default:o({error:"Unknown action"})}return!0});async function D(e,t){const o=new URL(e),r=o.hostname,c=t.split(";").map(i=>i.trim());console.log("Setting cookies for domain:",r,"Pairs:",c);for(const i of c){const[s,...n]=i.split("="),u=n.join("=");if(s&&u)try{await chrome.cookies.set({url:e,name:s.trim(),value:u.trim(),domain:r,path:"/",secure:o.protocol==="https:",sameSite:"lax"}),console.log(`Set cookie: ${s}=${u} for domain: ${r}`)}catch(d){console.error(`Failed to set cookie ${s}:`,d)}}}function H(e){const t=`----------------------------${Date.now().toString(16)}${Math.random().toString(16).substring(2)}`;let o="";return Object.entries(e).forEach(([r,c])=>{o+=`--${t}\r
`,o+=`Content-Disposition: form-data; name="${r}"\r
`,o+=`\r
`,o+=`${c}\r
`}),o+=`--${t}--\r
`,{body:o,boundary:t}}function S(e){console.log("🔍 [background.ts] serializeFormDataWithFiles開始. fields:",e);const t=`----------------------------${Date.now().toString(16)}${Math.random().toString(16).substring(2)}`;console.log("🔍 [background.ts] boundary生成:",t);const o=new TextEncoder,r=[];e.forEach((n,u)=>{var d;if(console.log(`🔍 [background.ts] field[${u}]処理開始:`,n),r.push(o.encode(`--${t}\r
`)),n.type==="file"){console.log(`🔍 [background.ts] field[${u}]はファイル型. filename:${n.filename}, contentType:${n.contentType}`),r.push(o.encode(`Content-Disposition: form-data; name="${n.key}"; filename="${n.filename}"\r
`)),r.push(o.encode(`Content-Type: ${n.contentType||"application/octet-stream"}\r
\r
`)),console.log(`🔍 [background.ts] field[${u}] Base64データ長:`,((d=n.data)==null?void 0:d.length)||0);const l=atob(n.data);console.log(`🔍 [background.ts] field[${u}] バイナリ文字列長:`,l.length);const y=new Uint8Array(l.length);for(let m=0;m<l.length;m++)y[m]=l.charCodeAt(m);console.log(`🔍 [background.ts] field[${u}] バイナリ配列長:`,y.length),r.push(y),r.push(o.encode(`\r
`))}else console.log(`🔍 [background.ts] field[${u}]はテキスト型. value:${n.value}`),r.push(o.encode(`Content-Disposition: form-data; name="${n.key}"\r
\r
`)),r.push(o.encode(`${n.value||""}\r
`));console.log(`🔍 [background.ts] field[${u}]処理完了`)}),r.push(o.encode(`--${t}--\r
`));const c=r.reduce((n,u)=>n+u.length,0);console.log("🔍 [background.ts] 全パート合計長:",c);const i=new Uint8Array(c);let s=0;return r.forEach((n,u)=>{console.log(`🔍 [background.ts] part[${u}]設定. 長さ:${n.length}, オフセット:${s}`),i.set(n,s),s+=n.length}),console.log("🔍 [background.ts] serializeFormDataWithFiles完了. body長:",i.length,"boundary:",t),{body:i,boundary:t}}async function A(e,t){var o;try{const{method:r,url:c,headers:i,body:s,isFormData:n,hasFiles:u}=e;if(console.log("🔍 [background.ts] handleHttpRequest開始"),console.log("🔍 [background.ts] method:",r),console.log("🔍 [background.ts] url:",c),console.log("🔍 [background.ts] headers:",i),console.log("🔍 [background.ts] isFormData:",n),console.log("🔍 [background.ts] hasFiles:",u),console.log("🔍 [background.ts] body type:",typeof s),console.log("🔍 [background.ts] body length:",(s==null?void 0:s.length)||0),i.Cookie||i.cookie){const a=i.Cookie||i.cookie;console.log("Found Cookie header:",a),await D(c,a)}const d={};Object.entries(i).forEach(([a,h])=>{a.toLowerCase()!=="cookie"&&(d[a]=h)}),console.log("Fetch headers (without Cookie):",d);let l;if(console.log("🔍 [background.ts] bodyの処理開始. isFormData && body:",n&&s),n&&s)try{console.log("🔍 [background.ts] body JSON.parse開始");const a=JSON.parse(s);if(console.log("🔍 [background.ts] body JSON.parse完了:",a),console.log("🔍 [background.ts] hasFiles && Array.isArray(bodyData):",u&&Array.isArray(a)),a.type==="binary"&&a.arrayBuffer){console.log("🔍 [background.ts] Binary ファイルの処理開始");const h=new Uint8Array(a.arrayBuffer);l=h,delete d["Content-Type"],a.contentType&&(d["Content-Type"]=a.contentType),console.log("🔍 [background.ts] Binary ファイル処理完了:",{filename:a.filename,contentType:a.contentType,size:h.length})}else if(u&&Array.isArray(a)){console.log("🔍 [background.ts] ファイルを含むFormDataの処理開始"),console.log("🔍 [background.ts] bodyData配列:",a);const{body:h,boundary:w}=S(a);l=h,d["Content-Type"]=`multipart/form-data; boundary=${w}`,console.log("🔍 [background.ts] ファイル含むFormData処理完了:",{boundary:w,bodyLength:h.length})}else if(typeof a=="object"&&!Array.isArray(a)){console.log("🔍 [background.ts] 通常のFormDataの処理開始");const{body:h,boundary:w}=H(a);l=h,d["Content-Type"]=`multipart/form-data; boundary=${w}`,console.log("🔍 [background.ts] 通常FormData処理完了:",{boundary:w})}else console.log("🔍 [background.ts] その他の場合、bodyをそのまま使用"),l=s}catch(a){console.error("🔍 [background.ts] Error parsing FormData body:",a),l=s}else console.log("🔍 [background.ts] FormDataではない、またはbodyが空"),l=s||void 0;const y={method:r,headers:d,credentials:"include",body:l};console.log("Fetch options:",{...y,body:l instanceof Uint8Array?`[Uint8Array ${l.length} bytes]`:l});const m=await fetch(c,y),N=await m.text(),T={};m.headers.forEach((a,h)=>{T[h]=a}),console.log("Response received:",{status:m.status,headers:T});let q="";l instanceof Uint8Array?q=new TextDecoder("utf-8",{fatal:!1}).decode(l.slice(0,Math.min(500,l.length)))+"...":q=l||"",t({success:!0,status:m.status,statusText:m.statusText,headers:T,body:N,debugInfo:{sentBodyType:l instanceof Uint8Array?"Uint8Array":typeof l,sentBodyPreview:q,boundary:(o=d["Content-Type"])!=null&&o.includes("boundary=")?d["Content-Type"].split("boundary=")[1]:null}})}catch(r){console.error("HTTP Request error:",r),t({success:!1,error:r.message})}}let k=new Map;function F(){chrome.webRequest.onBeforeSendHeaders.addListener(e=>{console.log("webRequest onBeforeSendHeaders:",e.url);const t=k.get(e.url);if(t&&e.requestHeaders){console.log("🚀 Injecting headers for:",e.url,t);const o=[...e.requestHeaders];return Object.entries(t).forEach(([r,c])=>{if(r.toLowerCase()==="cookie")console.log(`Converting Cookie header to X-Cookie-Data: ${c}`),o.push({name:"X-Cookie-Data",value:c});else{const i=o.findIndex(s=>{var n;return((n=s.name)==null?void 0:n.toLowerCase())===r.toLowerCase()});i>=0?o[i].value=c:o.push({name:r,value:c})}}),k.delete(e.url),console.log("Final headers:",o),{requestHeaders:o}}},{urls:["<all_urls>"]})}F();async function U(e,t){try{const{method:o,url:r,headers:c,body:i}=e;console.log("🔥 handleRequestWithHeaderInjection:",r,c),k.set(r,c),console.log("Set injection settings for URL:",r,"Headers:",c),console.log("Current injection settings:",Array.from(k.entries())),setTimeout(async()=>{try{console.log("→ fetching (with injected headers) to:",r);const s=await fetch(r,{method:o,headers:{},body:i||void 0}),n=await s.text(),u={};s.headers.forEach((d,l)=>u[l]=d),console.log("Response received:",{status:s.status,headers:u}),t({success:!0,status:s.status,statusText:s.statusText,headers:u,body:n})}catch(s){console.error("✖ fetch error:",s),k.delete(r),t({success:!1,error:s.message})}},100)}catch(o){console.error("handleRequestWithHeaderInjection error:",o),t({success:!1,error:o.message})}}function E(e){p||(p=!0,b=e||b,chrome.webRequest.onBeforeRequest.addListener(C,{urls:["<all_urls>"]},["requestBody"]),chrome.webRequest.onSendHeaders.addListener(v,{urls:["<all_urls>"]},["requestHeaders"]),chrome.webRequest.onHeadersReceived.addListener(R,{urls:["<all_urls>"]},["responseHeaders"]),chrome.webRequest.onCompleted.addListener($,{urls:["<all_urls>"]},["responseHeaders"]),chrome.webRequest.onErrorOccurred.addListener(I,{urls:["<all_urls>"]}),console.log("Network interceptor started"))}function _(){p&&(p=!1,chrome.webRequest.onBeforeRequest.removeListener(C),chrome.webRequest.onSendHeaders.removeListener(v),chrome.webRequest.onHeadersReceived.removeListener(R),chrome.webRequest.onCompleted.removeListener($),chrome.webRequest.onErrorOccurred.removeListener(I),g.clear(),console.log("Network interceptor stopped"))}function C(e){if(!x(e))return;const t={url:e.url,method:e.method,headers:{},timestamp:Date.now(),body:null};g.set(e.requestId,t)}function v(e){const t=g.get(e.requestId);t&&(e.requestHeaders&&e.requestHeaders.forEach(o=>{o.name&&o.value&&(t.headers[o.name]=o.value)}),g.set(e.requestId,t))}function R(e){const t=g.get(e.requestId);t&&(t.status=e.statusCode,t.responseHeaders={},e.responseHeaders&&e.responseHeaders.forEach(o=>{o.name&&o.value&&(t.responseHeaders[o.name]=o.value)}),g.set(e.requestId,t))}function $(e){const t=g.get(e.requestId);if(!t)return;t.duration=Date.now()-t.timestamp,t.status=e.statusCode;const o={id:e.requestId,name:`Intercepted ${t.method} Request`,method:t.method,url:t.url,headers:t.headers,body:t.body||null,timestamp:t.timestamp,status:t.status,responseHeaders:t.responseHeaders,duration:t.duration};L(o)}function I(e){const t=g.get(e.requestId);if(!t)return;t.duration=Date.now()-t.timestamp,t.status=0,t.error=e.error;const o={id:e.requestId,name:`Intercepted ${t.method} Request`,method:t.method,url:t.url,headers:t.headers,body:t.body||null,timestamp:t.timestamp,status:t.status,responseHeaders:t.responseHeaders,duration:t.duration,error:t.error};L(o)}function x(e){if(e.url.startsWith("chrome-extension://")||!b.methods.includes(e.method))return!1;if(b.urls.length>0)try{const t=new URL(e.url);if(!b.urls.includes(t.hostname))return!1}catch{return!1}return!0}function M(e){chrome.runtime.sendMessage(e).catch(()=>{})}chrome.runtime.onInstalled.addListener(async e=>{console.log("API Tester extension installed:",e.reason);const t=await chrome.storage.local.get(["settings","collections","history","variables"]),o={};t.settings||(o.settings={timeout:3e4,followRedirects:!0,validateSSL:!0,maxHistoryItems:100,openDevTools:!0}),t.collections||(o.collections=[]),t.history||(o.history=[]),t.variables||(o.variables={global:{},environment:{},collection:{}}),Object.keys(o).length>0?(await chrome.storage.local.set(o),console.log("Default data set:",o)):console.log("All data already exists, skipping initialization")}),chrome.runtime.onStartup.addListener(()=>{console.log("API Tester extension started")}),chrome.action.onClicked.addListener(e=>{console.log("Extension icon clicked on tab:",e.id),chrome.tabs.create({url:chrome.runtime.getURL("index.html")},t=>{t.id&&chrome.storage.local.get(["settings"],o=>{(o.settings||{}).openDevTools!==!1&&setTimeout(()=>{chrome.tabs.sendMessage(t.id,{action:"openDevToolsF12"})},1500)})})}),chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"interceptRequest",title:"Test this API with API Tester",contexts:["link"],targetUrlPatterns:["http://*/*","https://*/*"]})}),chrome.runtime.onStartup.addListener(()=>{chrome.alarms.create("cleanup",{delayInMinutes:60,periodInMinutes:60})}),chrome.tabs.onUpdated.addListener((e,t,o)=>{t.status==="complete"&&o.url&&console.log("Tab updated:",o.url)}),chrome.storage.onChanged.addListener((e,t)=>{t==="local"&&M({action:"storageChanged",changes:e})}),chrome.runtime.onConnect.addListener(e=>{e.name==="popup"&&e.onMessage.addListener(t=>{t.action==="getNetworkState"&&e.postMessage({interceptorActive:p,interceptedCount:g.size})})}),chrome.runtime.onMessage.addListener((e,t,o)=>{if(e.action==="exportInterceptedData"){const r=Array.from(g.values());return o({data:r}),!0}});async function P(e){const t=B(e);return new Promise((o,r)=>{chrome.identity.launchWebAuthFlow({url:t,interactive:!0},c=>{if(chrome.runtime.lastError){r(chrome.runtime.lastError);return}if(!c){r(new Error("No redirect URL received"));return}try{const i=new URL(c).searchParams,s=i.get("code"),n=i.get("error");n?r(new Error(n)):s?o(s):r(new Error("No authorization code received"))}catch(i){r(i)}})})}function B(e){const t=new URLSearchParams({response_type:"code",client_id:e.clientId,redirect_uri:e.redirectUri,scope:e.scope||"",state:j()});return`${e.authUrl}?${t.toString()}`}function j(){return`state_${Date.now()}_${Math.random().toString(36).substring(2)}`}async function O(e,t){const o={grant_type:"authorization_code",client_id:e.clientId,client_secret:e.clientSecret,code:t,redirect_uri:e.redirectUri},r=await fetch(e.tokenUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(o)});if(!r.ok)throw new Error(`Token exchange failed: ${r.statusText}`);return await r.json()}async function z(e,t){const o={grant_type:"refresh_token",client_id:e.clientId,client_secret:e.clientSecret,refresh_token:t},r=await fetch(e.tokenUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(o)});if(!r.ok)throw new Error(`Token refresh failed: ${r.statusText}`);return await r.json()}chrome.runtime.onMessage.addListener(async(e,t,o)=>{if(e.action==="oauth2Authorize"){try{const r=await P(e.config),c=await O(e.config,r);o({success:!0,tokens:c})}catch(r){o({success:!1,error:r.message})}return!0}if(e.action==="oauth2Refresh"){try{const r=await z(e.config,e.refreshToken);o({success:!0,tokens:r})}catch(r){o({success:!1,error:r.message})}return!0}});let f={totalRequests:0,successCount:0,errorCount:0,averageResponseTime:0};function L(e){if(f.totalRequests++,e.duration){const t=f.averageResponseTime*(f.totalRequests-1);f.averageResponseTime=(t+e.duration)/f.totalRequests}e.status&&e.status>=400||e.error?f.errorCount++:f.successCount++}chrome.runtime.onMessage.addListener((e,t,o)=>{if(e.action==="getPerformanceMetrics")return o(f),!0;if(e.action==="resetPerformanceMetrics")return f={totalRequests:0,successCount:0,errorCount:0,averageResponseTime:0},o({success:!0}),!0}),console.log("API Tester background script loaded")})();
