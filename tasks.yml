tasks:
  - id: sp
    prompt: |
      システム企画文書を作成する。ドキュメントはmarkdown形式とする。生成先は./docs/1.sp.mdファイルとする。
      以下は、Postman や Talend API Tester のような機能を持つ Chrome 拡張機能「PostPro API Tester」のシステム企画書をサンプルとしてまとめています。
      # システム企画書：PostPro API Tester Chrome 拡張

      ## 1. はじめに

      ### 1.1 ドキュメントの目的

      本企画書は、API 開発・テストを効率化する Chrome 拡張機能「PostPro API Tester」の全体像を整理し、開発に向けた要件定義および計画を示すことを目的とします。

      ### 1.2 想定読者

      * プロジェクトマネージャー
      * フロントエンドエンジニア
      * QA／テストエンジニア
      * UX デザイナー

      ---

      ## 2. 背景と課題

      * **複数ツールの煩雑さ**
        現在、Postman や Talend API Tester、curl 等、複数ツールを併用しており、ツール切り替えによる作業効率低下が発生。
      * **環境依存**
        デスクトップアプリ版のみの提供が多く、拡張機能としてブラウザ内で完結できる選択肢が少ない。
      * **チーム共有の難しさ**
        設定ファイルのバージョン管理や共有に工数がかかる。

      ---

      ## 3. 目的とゴール

      * **目的**
        ブラウザ内だけで完結する API テストプラットフォームを提供し、開発～テスト～共有の一連作業をシームレスにする。
      * **ゴール**

        * 開発初期フェーズ（α版）での主要機能実装
        * ベータテストによるフィードバック反映
        * 安定版リリースまでにユーザー要望20件以上収集

      ---

      ## 4. 想定ユーザー

      1. フロントエンド／バックエンド開発者
      2. QA／テストエンジニア
      3. CI/CD パイプライン担当者
      4. API ドキュメント作成者

      ---

      ## 5. システム概要

      「PostPro API Tester」は、Chrome 拡張としてブラウザのツールバーに常駐し、以下の機能を提供します。

      ---

      ## 6. 機能要件

      ### 6.1 リクエスト送信

      * **HTTP メソッド**
        GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS
      * **認証サポート**
        Basic, Bearer Token, API Key, OAuth2
      * **ボディタイプ**
        JSON, Form Data, Raw Text, Binary Files
      * **ヘッダー・クエリパラメータ**
        動的追加・編集
      * **Cookie 管理**
        自動取得・送信

      ### 6.2 高度な機能

      * **Pre-request スクリプト**
        リクエスト前の動的処理（JavaScript）
      * **テストスクリプト**
        レスポンス検証の自動化（Chai ライクなアサーション）
      * **変数システム**
        グローバル／環境／コレクション変数
      * **チェーンリクエスト**
        前回レスポンスの値を次回リクエストへ引き継ぎ

      ### 6.3 コレクション・シナリオ管理

      * **コレクション**
        関連リクエストのグループ化
      * **シナリオ実行**
        複数リクエストを順次実行するワークフロー
      * **フォルダ階層**
        ドラッグ＆ドロップによる整理

      ### 6.4 履歴・分析

      * **リクエスト履歴**
        自動保存＆フィルタ検索
      * **レスポンス表示**
        JSONツリー、テキスト、バイナリビュー
      * **統計ダッシュボード**
        リクエスト件数、エラー率など

      ---

      ## 7. 非機能要件

      * **パフォーマンス**
        起動・応答ともに 200ms 以下
      * **セキュリティ**
        スクリプト実行時のサンドボックス保証
      * **拡張性**
        プラグイン機構による第三者拡張対応
      * **多言語対応**
        日本語／英語インタフェース

      ---

      ## 8. システム構成

      ```mermaid
      flowchart LR
        A[ユーザー] -->|ブラウザ操作| B[Chrome 拡張 UI]
        B --> C[API リクエストモジュール]
        C --> D[Pre-request スクリプトエンジン]
        C --> E[HTTP クライアント]
        E --> F[ターゲット API サーバ]
        E --> G[レスポンス]
        G --> H[テストスクリプトエンジン]
        H --> B
      ```

      ---

      ## 9. UI/UX フロー

      1. 拡張アイコンをクリック → メイン画面表示
      2. 新規リクエスト作成
      3. メソッド・URL・認証設定
      4. 本文・ヘッダー編集
      5. 「送信」ボタンでリクエスト実行
      6. レスポンス受信 → JSONツリーやテキストで表示
      7. テスト結果をアサーション表示
      8. 保存・シナリオに追加

      ---

      ## 10. 技術スタック

      * **言語・フレームワーク**

        * TypeScript
        * React + Redux（UI）
      * **ビルド**

        * Vite + Rollup
      * **スクリプトエンジン**

        * Duktape or eval ベース（安全サンドボックス）
      * **ストレージ**

        * Chrome.storage.local
      * **テスト**

        * Jest + Puppeteer
      * **CI/CD**

        * GitHub Actions

      ---

      ## 11. 開発スケジュール（例）

      | フェーズ   | 期間               | 主なタスク               |
      | ------ | ---------------- | ------------------- |
      | 要件定義   | 2025/06/15–06/22 | 画面設計、API仕様確定        |
      | 設計     | 2025/06/23–07/06 | データモデル、UI モック作成     |
      | 実装（α版） | 2025/07/07–08/03 | コア機能（リクエスト送信等）実装    |
      | テスト（α） | 2025/08/04–08/17 | 単体・結合テスト            |
      | 実装（β版） | 2025/08/18–09/14 | シナリオ管理、履歴機能         |
      | テスト（β） | 2025/09/15–09/28 | ユーザー検証              |
      | リリース準備 | 2025/09/29–10/05 | ドキュメント整備、リリース       |
      | 公開     | 2025/10/06       | Chrome Web Store 登録 |

      ---

      ## 12. リスクと対策

      | リスク           | 対策                 |
      | ------------- | ------------------ |
      | スクリプト実行による脆弱性 | サンドボックス強化、CSP 制約   |
      | Chrome API 制限 | 定期的なマニフェストアップデート確認 |
      | 競合ツールとの差別化不足  | プラグイン機構＋軽量 UX      |
      | スケジュール遅延      | MVP 優先度見直し＆スコープ調整  |

      ---

      ## 13. 今後の展望

      * **CI 連携プラグイン**
        Jenkins/GitHub Actions からシナリオ一括実行
      * **チーム共有機能**
        クラウド上のコレクション同期
      * **モバイル対応**
        PWA 化によるタブレットサポート

      ---

      以上が「PostPro API Tester」のシステム企画書案です。ご確認・ご意見をお願いします。

  - id: sa
    prompt: |
      要求定義文書を作成する。ドキュメントはmarkdown形式とする。生成先は./docs/2.sa.mdファイルとする。システム企画文書を参照して作成する。
  - id: rd
    prompt: |
      要件定義文書を作成する。ドキュメントはmarkdown形式とする。生成先は./docs/3.rd.mdファイルとする。要求定義文書を参照して作成する。





